{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/deradoi/udemy/Crash Course - Build a Full Stack Web App/today-i-learned/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/deradoi/udemy/Crash Course - Build a Full Stack Web App/today-i-learned/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/deradoi/udemy/Crash Course - Build a Full Stack Web App/today-i-learned/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nvar GoTrueAdminApi = /*#__PURE__*/function () {\n  function GoTrueAdminApi(_ref) {\n    var _ref$url = _ref.url,\n      url = _ref$url === void 0 ? '' : _ref$url,\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers,\n      fetch = _ref.fetch;\n    _classCallCheck(this, GoTrueAdminApi);\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(fetch);\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this)\n    };\n  }\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   */\n  _createClass(GoTrueAdminApi, [{\n    key: \"signOut\",\n    value: function signOut(jwt) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/logout\"), {\n                headers: this.headers,\n                jwt: jwt,\n                noResolveJson: true\n              });\n            case 3:\n              return _context.abrupt(\"return\", {\n                data: null,\n                error: null\n              });\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              if (!isAuthError(_context.t0)) {\n                _context.next = 10;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                data: null,\n                error: _context.t0\n              });\n            case 10:\n              throw _context.t0;\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options.redirectTo A URL or mobile deeplink to send the user to after they are confirmed.\n     * @param options.data Optional user metadata\n     */\n  }, {\n    key: \"inviteUserByEmail\",\n    value: function inviteUserByEmail(email) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/invite\"), {\n                body: {\n                  email: email,\n                  data: options.data\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: _userResponse\n              });\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              if (!isAuthError(_context2.t0)) {\n                _context2.next = 10;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context2.t0\n              });\n            case 10:\n              throw _context2.t0;\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 6]]);\n      }));\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n  }, {\n    key: \"generateLink\",\n    value: function generateLink(params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var options, rest, body;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              options = params.options, rest = __rest(params, [\"options\"]);\n              body = Object.assign(Object.assign({}, rest), options);\n              if ('newEmail' in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body['newEmail'];\n              }\n              _context3.next = 6;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/admin/generate_link\"), {\n                body: body,\n                headers: this.headers,\n                xform: _generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n              });\n            case 6:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              if (!isAuthError(_context3.t0)) {\n                _context3.next = 13;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  properties: null,\n                  user: null\n                },\n                error: _context3.t0\n              });\n            case 13:\n              throw _context3.t0;\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"createUser\",\n    value: function createUser(attributes) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/admin/users\"), {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              if (!isAuthError(_context4.t0)) {\n                _context4.next = 10;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context4.t0\n              });\n            case 10:\n              throw _context4.t0;\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 6]]);\n      }));\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n  }, {\n    key: \"listUsers\",\n    value: function listUsers(params) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var pagination, response, users, total, links;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              pagination = {\n                nextPage: null,\n                lastPage: 0,\n                total: 0\n              };\n              _context5.next = 4;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users\"), {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                  page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                  per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n                },\n                xform: _noResolveJsonResponse\n              });\n            case 4:\n              response = _context5.sent;\n              if (!response.error) {\n                _context5.next = 7;\n                break;\n              }\n              throw response.error;\n            case 7:\n              _context5.next = 9;\n              return response.json();\n            case 9:\n              users = _context5.sent;\n              total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n              links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n              if (links.length > 0) {\n                links.forEach(function (link) {\n                  var page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                  var rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                  pagination[\"\".concat(rel, \"Page\")] = page;\n                });\n                pagination.total = parseInt(total);\n              }\n              return _context5.abrupt(\"return\", {\n                data: Object.assign(Object.assign({}, users), pagination),\n                error: null\n              });\n            case 16:\n              _context5.prev = 16;\n              _context5.t0 = _context5[\"catch\"](0);\n              if (!isAuthError(_context5.t0)) {\n                _context5.next = 20;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                data: {\n                  users: []\n                },\n                error: _context5.t0\n              });\n            case 20:\n              throw _context5.t0;\n            case 21:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 16]]);\n      }));\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"getUserById\",\n    value: function getUserById(uid) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n            case 6:\n              _context6.prev = 6;\n              _context6.t0 = _context6[\"catch\"](0);\n              if (!isAuthError(_context6.t0)) {\n                _context6.next = 10;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context6.t0\n              });\n            case 10:\n              throw _context6.t0;\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 6]]);\n      }));\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"updateUserById\",\n    value: function updateUserById(uid, attributes) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return _request(this.fetch, 'PUT', \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](0);\n              if (!isAuthError(_context7.t0)) {\n                _context7.next = 10;\n                break;\n              }\n              return _context7.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context7.t0\n              });\n            case 10:\n              throw _context7.t0;\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 6]]);\n      }));\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser(id) {\n      var shouldSoftDelete = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _request(this.fetch, 'DELETE', \"\".concat(this.url, \"/admin/users/\").concat(id), {\n                headers: this.headers,\n                body: {\n                  should_soft_delete: shouldSoftDelete\n                },\n                xform: _userResponse\n              });\n            case 3:\n              return _context8.abrupt(\"return\", _context8.sent);\n            case 6:\n              _context8.prev = 6;\n              _context8.t0 = _context8[\"catch\"](0);\n              if (!isAuthError(_context8.t0)) {\n                _context8.next = 10;\n                break;\n              }\n              return _context8.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context8.t0\n              });\n            case 10:\n              throw _context8.t0;\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[0, 6]]);\n      }));\n    }\n  }, {\n    key: \"_listFactors\",\n    value: function _listFactors(params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _yield$_request, data, error;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors\"), {\n                headers: this.headers,\n                xform: function xform(factors) {\n                  return {\n                    data: {\n                      factors: factors\n                    },\n                    error: null\n                  };\n                }\n              });\n            case 3:\n              _yield$_request = _context9.sent;\n              data = _yield$_request.data;\n              error = _yield$_request.error;\n              return _context9.abrupt(\"return\", {\n                data: data,\n                error: error\n              });\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](0);\n              if (!isAuthError(_context9.t0)) {\n                _context9.next = 13;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                data: null,\n                error: _context9.t0\n              });\n            case 13:\n              throw _context9.t0;\n            case 14:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[0, 9]]);\n      }));\n    }\n  }, {\n    key: \"_deleteFactor\",\n    value: function _deleteFactor(params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return _request(this.fetch, 'DELETE', \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors/\").concat(params.id), {\n                headers: this.headers\n              });\n            case 3:\n              data = _context10.sent;\n              return _context10.abrupt(\"return\", {\n                data: data,\n                error: null\n              });\n            case 7:\n              _context10.prev = 7;\n              _context10.t0 = _context10[\"catch\"](0);\n              if (!isAuthError(_context10.t0)) {\n                _context10.next = 11;\n                break;\n              }\n              return _context10.abrupt(\"return\", {\n                data: null,\n                error: _context10.t0\n              });\n            case 11:\n              throw _context10.t0;\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this, [[0, 7]]);\n      }));\n    }\n  }]);\n  return GoTrueAdminApi;\n}();\nexport { GoTrueAdminApi as default };","map":{"version":3,"names":["_generateLinkResponse","_noResolveJsonResponse","_request","_userResponse","resolveFetch","isAuthError","GoTrueAdminApi","_ref","_ref$url","url","_ref$headers","headers","fetch","_classCallCheck","mfa","listFactors","_listFactors","bind","deleteFactor","_deleteFactor","_createClass","key","value","signOut","jwt","concat","noResolveJson","_context","abrupt","data","error","prev","t0","next","stop","_callee","inviteUserByEmail","email","options","arguments","length","undefined","body","redirectTo","xform","_context2","sent","user","_callee2","generateLink","params","rest","__rest","Object","assign","new_email","newEmail","_context3","properties","_callee3","createUser","attributes","_context4","_callee4","listUsers","pagination","nextPage","lastPage","total","_context5","query","page","_b","_a","toString","per_page","_d","_c","perPage","response","json","users","_e","get","links","_g","_f","split","forEach","link","parseInt","substring","rel","JSON","parse","_callee5","getUserById","uid","_context6","_callee6","updateUserById","_context7","_callee7","deleteUser","id","shouldSoftDelete","should_soft_delete","_context8","_callee8","userId","factors","_yield$_request","_context9","_callee9","_context10","_callee10","default"],"sources":["C:\\Users\\deradoi\\udemy\\Crash Course - Build a Full Stack Web App\\today-i-learned\\node_modules\\@supabase\\gotrue-js\\src\\GoTrueAdminApi.ts"],"sourcesContent":["import {\n  Fetch,\n  _generateLinkResponse,\n  _noResolveJsonResponse,\n  _request,\n  _userResponse,\n} from './lib/fetch'\nimport { resolveFetch } from './lib/helpers'\nimport {\n  AdminUserAttributes,\n  GenerateLinkParams,\n  GenerateLinkResponse,\n  Pagination,\n  User,\n  UserResponse,\n  GoTrueAdminMFAApi,\n  AuthMFAAdminDeleteFactorParams,\n  AuthMFAAdminDeleteFactorResponse,\n  AuthMFAAdminListFactorsParams,\n  AuthMFAAdminListFactorsResponse,\n  PageParams,\n} from './lib/types'\nimport { AuthError, isAuthError } from './lib/errors'\n\nexport default class GoTrueAdminApi {\n  /** Contains all MFA administration methods. */\n  mfa: GoTrueAdminMFAApi\n\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(fetch)\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this),\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   */\n  async signOut(jwt: string): Promise<{ data: null; error: AuthError | null }> {\n    try {\n      await _request(this.fetch, 'POST', `${this.url}/logout`, {\n        headers: this.headers,\n        jwt,\n        noResolveJson: true,\n      })\n      return { data: null, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options.redirectTo A URL or mobile deeplink to send the user to after they are confirmed.\n   * @param options.data Optional user metadata\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      data?: object\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n        body: { email, data: options.data },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n  async generateLink(params: GenerateLinkParams): Promise<GenerateLinkResponse> {\n    try {\n      const { options, ...rest } = params\n      const body: any = { ...rest, ...options }\n      if ('newEmail' in rest) {\n        // replace newEmail with new_email in request body\n        body.new_email = rest?.newEmail\n        delete body['newEmail']\n      }\n      return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n        body: body,\n        headers: this.headers,\n        xform: _generateLinkResponse,\n        redirectTo: options?.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            properties: null,\n            user: null,\n          },\n          error,\n        }\n      }\n      throw error\n    }\n  }\n\n  // User Admin API\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async createUser(attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n   */\n  async listUsers(\n    params?: PageParams\n  ): Promise<\n    | { data: { users: User[]; aud: string } & Pagination; error: null }\n    | { data: { users: [] }; error: AuthError }\n  > {\n    try {\n      const pagination: Pagination = { nextPage: null, lastPage: 0, total: 0 }\n      const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n        headers: this.headers,\n        noResolveJson: true,\n        query: {\n          page: params?.page?.toString() ?? '',\n          per_page: params?.perPage?.toString() ?? '',\n        },\n        xform: _noResolveJsonResponse,\n      })\n      if (response.error) throw response.error\n\n      const users = await response.json()\n      const total = response.headers.get('x-total-count') ?? 0\n      const links = response.headers.get('link')?.split(',') ?? []\n      if (links.length > 0) {\n        links.forEach((link: string) => {\n          const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1))\n          const rel = JSON.parse(link.split(';')[1].split('=')[1])\n          pagination[`${rel}Page`] = page\n        })\n\n        pagination.total = parseInt(total)\n      }\n      return { data: { ...users, ...pagination }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { users: [] }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(uid: string): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(uid: string, attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n   * Defaults to false for backward compatibility.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async deleteUser(id: string, shouldSoftDelete = false): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n        headers: this.headers,\n        body: {\n          should_soft_delete: shouldSoftDelete,\n        },\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _listFactors(\n    params: AuthMFAAdminListFactorsParams\n  ): Promise<AuthMFAAdminListFactorsResponse> {\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'GET',\n        `${this.url}/admin/users/${params.userId}/factors`,\n        {\n          headers: this.headers,\n          xform: (factors: any) => {\n            return { data: { factors }, error: null }\n          },\n        }\n      )\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _deleteFactor(\n    params: AuthMFAAdminDeleteFactorParams\n  ): Promise<AuthMFAAdminDeleteFactorResponse> {\n    try {\n      const data = await _request(\n        this.fetch,\n        'DELETE',\n        `${this.url}/admin/users/${params.userId}/factors/${params.id}`,\n        {\n          headers: this.headers,\n        }\n      )\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}