{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/deradoi/udemy/Crash Course - Build a Full Stack Web App/today-i-learned/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/deradoi/udemy/Crash Course - Build a Full Stack Web App/today-i-learned/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/deradoi/udemy/Crash Course - Build a Full Stack Web App/today-i-learned/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError } from './types';\nexport var FunctionsClient = /*#__PURE__*/function () {\n  function FunctionsClient(url) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers,\n      customFetch = _ref.customFetch;\n    _classCallCheck(this, FunctionsClient);\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(customFetch);\n  }\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  _createClass(FunctionsClient, [{\n    key: \"setAuth\",\n    value: function setAuth(token) {\n      this.headers.Authorization = \"Bearer \".concat(token);\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n  }, {\n    key: \"invoke\",\n    value: function invoke(functionName) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var headers, method, functionArgs, _headers, body, response, isRelayError, responseType, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              headers = options.headers, method = options.method, functionArgs = options.body;\n              _headers = {};\n              if (functionArgs && (headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type') || !headers)) {\n                if (typeof Blob !== 'undefined' && functionArgs instanceof Blob || functionArgs instanceof ArrayBuffer) {\n                  // will work for File as File inherits Blob\n                  // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                  _headers['Content-Type'] = 'application/octet-stream';\n                  body = functionArgs;\n                } else if (typeof functionArgs === 'string') {\n                  // plain string\n                  _headers['Content-Type'] = 'text/plain';\n                  body = functionArgs;\n                } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                  // don't set content-type headers\n                  // Request will automatically add the right boundary value\n                  body = functionArgs;\n                } else {\n                  // default, assume this is JSON\n                  _headers['Content-Type'] = 'application/json';\n                  body = JSON.stringify(functionArgs);\n                }\n              }\n              _context.next = 6;\n              return this.fetch(\"\".concat(this.url, \"/\").concat(functionName), {\n                method: method || 'POST',\n                // headers priority is (high to low):\n                // 1. invoke-level headers\n                // 2. client-level headers\n                // 3. default Content-Type header\n                headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                body: body\n              }).catch(function (fetchError) {\n                throw new FunctionsFetchError(fetchError);\n              });\n            case 6:\n              response = _context.sent;\n              isRelayError = response.headers.get('x-relay-error');\n              if (!(isRelayError && isRelayError === 'true')) {\n                _context.next = 10;\n                break;\n              }\n              throw new FunctionsRelayError(response);\n            case 10:\n              if (response.ok) {\n                _context.next = 12;\n                break;\n              }\n              throw new FunctionsHttpError(response);\n            case 12:\n              responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n              if (!(responseType === 'application/json')) {\n                _context.next = 19;\n                break;\n              }\n              _context.next = 16;\n              return response.json();\n            case 16:\n              data = _context.sent;\n              _context.next = 34;\n              break;\n            case 19:\n              if (!(responseType === 'application/octet-stream')) {\n                _context.next = 25;\n                break;\n              }\n              _context.next = 22;\n              return response.blob();\n            case 22:\n              data = _context.sent;\n              _context.next = 34;\n              break;\n            case 25:\n              if (!(responseType === 'multipart/form-data')) {\n                _context.next = 31;\n                break;\n              }\n              _context.next = 28;\n              return response.formData();\n            case 28:\n              data = _context.sent;\n              _context.next = 34;\n              break;\n            case 31:\n              _context.next = 33;\n              return response.text();\n            case 33:\n              data = _context.sent;\n            case 34:\n              return _context.abrupt(\"return\", {\n                data: data,\n                error: null\n              });\n            case 37:\n              _context.prev = 37;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", {\n                data: null,\n                error: _context.t0\n              });\n            case 40:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 37]]);\n      }));\n    }\n  }]);\n  return FunctionsClient;\n}();","map":{"version":3,"names":["resolveFetch","FunctionsFetchError","FunctionsHttpError","FunctionsRelayError","FunctionsClient","url","_ref","arguments","length","undefined","_ref$headers","headers","customFetch","_classCallCheck","fetch","_createClass","key","value","setAuth","token","Authorization","concat","invoke","functionName","options","method","functionArgs","body","_headers","Object","prototype","hasOwnProperty","call","Blob","ArrayBuffer","FormData","JSON","stringify","_context","next","assign","catch","fetchError","response","sent","isRelayError","get","ok","responseType","_a","split","trim","json","data","blob","formData","text","abrupt","error","prev","t0","stop","_callee"],"sources":["C:\\Users\\deradoi\\udemy\\Crash Course - Build a Full Stack Web App\\today-i-learned\\node_modules\\@supabase\\functions-js\\src\\FunctionsClient.ts"],"sourcesContent":["import { resolveFetch } from './helper'\nimport {\n  Fetch,\n  FunctionsFetchError,\n  FunctionsHttpError,\n  FunctionsRelayError,\n  FunctionsResponse,\n  FunctionInvokeOptions,\n} from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - The name of the Function to invoke.\n   * @param options - Options for invoking the Function.\n   */\n  async invoke<T = any>(\n    functionName: string,\n    options: FunctionInvokeOptions = {}\n  ): Promise<FunctionsResponse<T>> {\n    try {\n      const { headers, method, body: functionArgs } = options\n\n      let _headers: Record<string, string> = {}\n      let body: any\n      if (\n        functionArgs &&\n        ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)\n      ) {\n        if (\n          (typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n          functionArgs instanceof ArrayBuffer\n        ) {\n          // will work for File as File inherits Blob\n          // also works for ArrayBuffer as it is the same underlying structure as a Blob\n          _headers['Content-Type'] = 'application/octet-stream'\n          body = functionArgs\n        } else if (typeof functionArgs === 'string') {\n          // plain string\n          _headers['Content-Type'] = 'text/plain'\n          body = functionArgs\n        } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n          // don't set content-type headers\n          // Request will automatically add the right boundary value\n          body = functionArgs\n        } else {\n          // default, assume this is JSON\n          _headers['Content-Type'] = 'application/json'\n          body = JSON.stringify(functionArgs)\n        }\n      }\n\n      const response = await this.fetch(`${this.url}/${functionName}`, {\n        method: method || 'POST',\n        // headers priority is (high to low):\n        // 1. invoke-level headers\n        // 2. client-level headers\n        // 3. default Content-Type header\n        headers: { ..._headers, ...this.headers, ...headers },\n        body,\n      }).catch((fetchError) => {\n        throw new FunctionsFetchError(fetchError)\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        throw new FunctionsRelayError(response)\n      }\n\n      if (!response.ok) {\n        throw new FunctionsHttpError(response)\n      }\n\n      let responseType = (response.headers.get('Content-Type') ?? 'text/plain').split(';')[0].trim()\n      let data: any\n      if (responseType === 'application/json') {\n        data = await response.json()\n      } else if (responseType === 'application/octet-stream') {\n        data = await response.blob()\n      } else if (responseType === 'multipart/form-data') {\n        data = await response.formData()\n      } else {\n        // default to text\n        data = await response.text()\n      }\n\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}